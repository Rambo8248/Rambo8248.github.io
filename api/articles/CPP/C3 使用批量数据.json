{"title":"CPP3 使用批量数据","uid":"3555062c5fedfb27efa69ce78e83937d","slug":"CPP/C3 使用批量数据","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:16.985Z","comments":true,"path":"api/articles/CPP/C3 使用批量数据.json","keywords":null,"cover":[],"content":"<h1 id=\"使用批量数据\"><a href=\"#使用批量数据\" class=\"headerlink\" title=\"使用批量数据\"></a>使用批量数据</h1><ul>\n<li>通常需要在程序中处理多个相似数据段</li>\n<li>编写程序读取学生的考试和家庭作业成绩并计算出总成绩</li>\n</ul>\n<h2 id=\"计算学生成绩\"><a href=\"#计算学生成绩\" class=\"headerlink\" title=\"计算学生成绩\"></a>计算学生成绩</h2><ul>\n<li>学生课程总成绩为加权平均</li>\n<li>第一次尝试的程序如下</li>\n</ul>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iomanip></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ios></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string></span></span>\n\n<span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>cin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>setprecision<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>string<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>streamsize<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//请求输入并读入学生的姓名</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Please Enter your name:\"</span><span class=\"token punctuation\">;</span>\n  string name<span class=\"token punctuation\">;</span>\n  cin <span class=\"token operator\">>></span> name<span class=\"token punctuation\">;</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello,\"</span> <span class=\"token operator\">&lt;&lt;</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//请求输入并读入其中和期末成绩</span>\n  cout <span class=\"token operator\">&lt;&lt;</span>  <span class=\"token string\">\"Please Enter your midterm and final exam grades:\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">double</span> midterm<span class=\"token punctuation\">,</span><span class=\"token keyword\">final</span><span class=\"token punctuation\">;</span>\n  cin <span class=\"token operator\">>></span> midterm <span class=\"token operator\">>></span> <span class=\"token keyword\">final</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//请求输入家庭作业成绩</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Enter all your homework grades,\"</span> <span class=\"token string\">\"Followed by end-of-file:\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//到目前为止，读到的家庭作业成绩的个数及总和</span>\n  <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">double</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//将家庭作业成绩读到变量x中</span>\n  <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cin<span class=\"token operator\">>></span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">++</span>count<span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">+=</span> x<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  streamsize prec <span class=\"token operator\">=</span> cout<span class=\"token punctuation\">.</span><span class=\"token function\">precision</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Your final grade is\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setprecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">*</span> midterm <span class=\"token operator\">+</span> <span class=\"token number\">0.4</span> <span class=\"token operator\">*</span><span class=\"token keyword\">final</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.4</span> <span class=\"token operator\">*</span>sum <span class=\"token operator\">/</span>count <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setprecision</span><span class=\"token punctuation\">(</span>prec<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>库</th>\n<th>类型</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&lt;ios&gt;</code></td>\n<td>类型<code>streamsize</code></td>\n<td>输入/输出库用这个类型来表示长度</td>\n</tr>\n<tr>\n<td><code>&lt;iomanip&gt;</code></td>\n<td>控制器<code>setprecision</code></td>\n<td>允许我们指明输出所包含的有效位数</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"用中值代替平均值\"><a href=\"#用中值代替平均值\" class=\"headerlink\" title=\"用中值代替平均值\"></a>用中值代替平均值</h2><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iomanip></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;ios></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;vector></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//请求输入并读入学生姓名</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Please Enter Your Name:\"</span><span class=\"token punctuation\">;</span>\n  string name<span class=\"token punctuation\">;</span>\n  cin <span class=\"token operator\">>></span> name<span class=\"token punctuation\">;</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello,\"</span> <span class=\"token operator\">&lt;&lt;</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//请求输入并读入其中和期末成绩</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Please Enter Your midterm and final exam grades:\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">double</span> midterm<span class=\"token punctuation\">,</span><span class=\"token keyword\">final</span><span class=\"token punctuation\">;</span>\n  cin <span class=\"token operator\">>></span> midterm <span class=\"token operator\">>></span> <span class=\"token keyword\">final</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//请求输入家庭作业成绩</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Enter all your homework grades,\"</span> <span class=\"token string\">\"Followed by end-of-file:\"</span><span class=\"token punctuation\">;</span>\n\n  vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span> homework<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//不变式：homework包含所有的家庭作业成绩</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cin<span class=\"token operator\">>></span>x<span class=\"token punctuation\">)</span>\n    homework<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">//检查homework是否为空</span>\n <span class=\"token keyword\">typedef</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span><span class=\"token double-colon punctuation\">::</span>size_type vec_sz<span class=\"token punctuation\">;</span>\n vec_sz size <span class=\"token operator\">=</span> homework<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   cout <span class=\"token operator\">&lt;&lt;</span> endl <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"You must enter your grades.\"</span> <span class=\"token string\">\"Please tyr again.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n\n <span class=\"token comment\">//对成绩进行排序</span>\n <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>homework<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>homework<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">//计算家庭作业成绩的中值</span>\n vec_sz mid <span class=\"token operator\">=</span> size<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">double</span> median<span class=\"token punctuation\">;</span>\n median <span class=\"token operator\">=</span> size <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>homework<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>homework<span class=\"token punctuation\">[</span>mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>homework<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">//计算并输出总成绩</span>\n streamsize prec <span class=\"token operator\">=</span> cout<span class=\"token punctuation\">.</span><span class=\"token function\">precision</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Your final grade is\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setprecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">*</span> midterm <span class=\"token operator\">+</span> <span class=\"token number\">0.4</span> <span class=\"token operator\">*</span><span class=\"token keyword\">final</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.4</span> <span class=\"token operator\">*</span>median <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setprecision</span><span class=\"token punctuation\">(</span>prec<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>vector&lt;double&gt; homework</code></td>\n<td>定义homework为一个向量且该向量保存double类型的值</td>\n</tr>\n<tr>\n<td><code>homework.push_back(x);</code></td>\n<td><code>push_back</code>成员函数操作为添加一个新元素到向量的末尾</td>\n</tr>\n<tr>\n<td><code>typedef vector&lt;double&gt;::size_type vec_sz</code></td>\n<td>vector类型定义了一个名为<code>vector&lt;double&gt;::size_type</code>的类型和一个名为<code>size</code>的函数</td>\n</tr>\n<tr>\n<td><code>typedef</code></td>\n<td>所定义的名称是特定类型的一个替代名<br />而不是这种类型的一个变量</td>\n</tr>\n<tr>\n<td><code>return 1</code></td>\n<td>大部分系统环境都将所有的非0值看作是失败</td>\n</tr>\n<tr>\n<td><code>sort</code></td>\n<td>该函数定义在头文件<code>&lt;algorithm&gt;</code>中<br />仅仅调换了原容器中的元素值的<strong>相对顺序</strong>，<strong>而不是创建一个新的容器</strong>用于存储排序后的结果</td>\n</tr>\n<tr>\n<td><code>%</code></td>\n<td>取模运算符<br />返回余数</td>\n</tr>\n<tr>\n<td><code>?:</code></td>\n<td>条件运算符<br />if-then-else</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"将数据集合存储到向量中\"><a href=\"#将数据集合存储到向量中\" class=\"headerlink\" title=\"将数据集合存储到向量中\"></a>将数据集合存储到向量中</h3><ul>\n<li>存储大量数值，每次读取一个数值，而且在读数值的时候并不会预先知道数值的个数</li>\n<li>读取了所有的数值之后对它们进行排序</li>\n<li>高效获取中间的一个或两个数值</li>\n</ul>\n<h3 id=\"更加深入的观察\"><a href=\"#更加深入的观察\" class=\"headerlink\" title=\"更加深入的观察\"></a>更加深入的观察</h3><h4 id=\"homework为空的情况下为什么要退出程序\"><a href=\"#homework为空的情况下为什么要退出程序\" class=\"headerlink\" title=\"homework为空的情况下为什么要退出程序\"></a>homework为空的情况下为什么要退出程序</h4><pre class=\"mermaid\">graph TD\n没有读到元素 --> homework.size=0 --> mid=0 --> 执行到homeworkmid会查看homework的第一个元素\n--> 但是homework中并没有元素存在 -->Error!</pre>\n\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gtu80i3ekzj60mt0fwq3h02.jpg\" alt=\"image-20210810090937228\"></p>\n<h4 id=\"size-type是无符号整数类型\"><a href=\"#size-type是无符号整数类型\" class=\"headerlink\" title=\"size_type是无符号整数类型\"></a><code>size_type</code>是无符号整数类型</h4><p>不能存储负数值，故不用检查<code>homework.size()&lt;0</code>是否成立，因为不等式总是产生false值</p>\n<h4 id=\"普通整数-无符号整数转化\"><a href=\"#普通整数-无符号整数转化\" class=\"headerlink\" title=\"普通整数-无符号整数转化\"></a>普通整数-无符号整数转化</h4><p>普通整数和无符号整数在表达式中结合在一起时，普通整数就要被转换为无符号整数</p>\n<h4 id=\"使用标准库时，性能不会太差\"><a href=\"#使用标准库时，性能不会太差\" class=\"headerlink\" title=\"使用标准库时，性能不会太差\"></a>使用标准库时，性能不会太差</h4><h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>代码</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>typedef type name;</code></td>\n<td>将name定义为type的替代名</td>\n</tr>\n<tr>\n<td><code>v.push_back(e)</code></td>\n<td>给向量添加一个初始值为e的元素</td>\n</tr>\n<tr>\n<td><code>while(cin&gt;&gt;x)</code></td>\n<td>将一个适当类型的值读到x中并检查流的状态</td>\n</tr>\n<tr>\n<td><code>s.precision(n)</code></td>\n<td>为以后的输出将流s的精度设置为n</td>\n</tr>\n<tr>\n<td><code>setprecision(n)</code></td>\n<td>返回一个值，在输出流s上写入时，该值具有调用<code>s.precision(n)</code>的效果</td>\n</tr>\n</tbody>\n</table>\n</div>\n","text":"使用批量数据 通常需要在程序中处理多个相似数据段 编写程序读取学生的考试和家庭作业成绩并计算出总成绩 计算学生成绩 学生课程总成绩为加权平均 第一次尝试的程序如下 #include&lt;iomanip> #include&lt;ios> #include&lt;iostream...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%89%B9%E9%87%8F%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">使用批量数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9\"><span class=\"toc-text\">计算学生成绩</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8%E4%B8%AD%E5%80%BC%E4%BB%A3%E6%9B%BF%E5%B9%B3%E5%9D%87%E5%80%BC\"><span class=\"toc-text\">用中值代替平均值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%86%E6%95%B0%E6%8D%AE%E9%9B%86%E5%90%88%E5%AD%98%E5%82%A8%E5%88%B0%E5%90%91%E9%87%8F%E4%B8%AD\"><span class=\"toc-text\">将数据集合存储到向量中</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E5%8A%A0%E6%B7%B1%E5%85%A5%E7%9A%84%E8%A7%82%E5%AF%9F\"><span class=\"toc-text\">更加深入的观察</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#homework%E4%B8%BA%E7%A9%BA%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%80%80%E5%87%BA%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">homework为空的情况下为什么要退出程序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#size-type%E6%98%AF%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">size_type是无符号整数类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%99%AE%E9%80%9A%E6%95%B4%E6%95%B0-%E6%97%A0%E7%AC%A6%E5%8F%B7%E6%95%B4%E6%95%B0%E8%BD%AC%E5%8C%96\"><span class=\"toc-text\">普通整数-无符号整数转化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%A0%87%E5%87%86%E5%BA%93%E6%97%B6%EF%BC%8C%E6%80%A7%E8%83%BD%E4%B8%8D%E4%BC%9A%E5%A4%AA%E5%B7%AE\"><span class=\"toc-text\">使用标准库时，性能不会太差</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li></ol></li></ol>","author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CPP2 循环与计数","uid":"0a24b61512170bdfb39d64a4b932bf18","slug":"CPP/C2 循环与计数","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:19.523Z","comments":true,"path":"api/articles/CPP/C2 循环与计数.json","keywords":null,"cover":[],"text":"循环与计数本章中进一步增加程序的灵活性，允许我们无需重新编写程序就可以直接改变框架的长度 问题上一节中的输出 存在如下缺陷 每行输出都要与程序的某一部分（以及一个变量）相对应 即使大堆输出格式的一个简单修改，都要求我们重新编写程序 故 构造一个更为灵活的输出形式$\\to$​无需将...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CPP4 组织程序与数据","uid":"bc5e708322b6829557ee8bb706942cbe","slug":"CPP/C4 组织程序和数据","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:14.187Z","comments":true,"path":"api/articles/CPP/C4 组织程序和数据.json","keywords":null,"cover":[],"text":"组织程序和数据库工具特征 能够解决某些特定类型的问题 独立于其他大多数工具 都有一个名称 我们自己编写的程序具备特性中的第一个，不具备另外两个。 对于小程序→不是坏事 更困难的问题→除非将解决方案分割成相互独立的具有名称的各个部分，否则会变得无法控制 C++提供两种基本方法以便让...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}