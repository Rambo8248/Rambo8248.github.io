{"title":"CPP2 循环与计数","uid":"0a24b61512170bdfb39d64a4b932bf18","slug":"CPP/C2 循环与计数","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:19.000Z","comments":true,"path":"api/articles/CPP/C2 循环与计数.json","keywords":null,"cover":[],"content":"<h1 id=\"循环与计数\"><a href=\"#循环与计数\" class=\"headerlink\" title=\"循环与计数\"></a>循环与计数</h1><p>本章中进一步增加程序的灵活性，允许我们无需重新编写程序就可以直接改变框架的长度</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>上一节中的输出</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gtu7zzxj27j60nc068dga02.jpg\" alt=\"截屏2021-08-07 下午5.09.53\"></p>\n<p>存在如下缺陷</p>\n<ul>\n<li>每行输出都要与程序的某一部分（以及一个变量）相对应</li>\n<li>即使大堆输出格式的一个简单修改，都要求我们重新编写程序</li>\n</ul>\n<p>故</p>\n<ul>\n<li>构造一个更为灵活的输出形式$\\to$​无需将每一行都存储在一个局部变量中</li>\n</ul>\n<h2 id=\"整体框架\"><a href=\"#整体框架\" class=\"headerlink\" title=\"整体框架\"></a>整体框架</h2><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string></span></span>\n\n<span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>cin<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> std<span class=\"token double-colon punctuation\">::</span>cout<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Please Enter your first name:\"</span><span class=\"token punctuation\">;</span>\n\n  string name<span class=\"token punctuation\">;</span>\n  cin <span class=\"token operator\">>></span> name<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> string greeting <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello,\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> pad <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> rows <span class=\"token operator\">=</span> pad <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> string<span class=\"token double-colon punctuation\">::</span>size_type cols <span class=\"token operator\">=</span> greeting<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> pad <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">!=</span> rows<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>r<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    string<span class=\"token double-colon punctuation\">::</span>size_type c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>c<span class=\"token operator\">!</span> <span class=\"token operator\">=</span> cols<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">==</span> pad <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">==</span> pad <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> greeting<span class=\"token punctuation\">;</span>\n        c <span class=\"token operator\">+=</span> greeting<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">else</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> r <span class=\"token operator\">==</span> rows <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> cols <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n          cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n          cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">++</span>c<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"输出数目未知的行\"><a href=\"#输出数目未知的行\" class=\"headerlink\" title=\"输出数目未知的行\"></a>输出数目未知的行</h2><h2 id=\"输出一行\"><a href=\"#输出一行\" class=\"headerlink\" title=\"输出一行\"></a>输出一行</h2><h2 id=\"完整的程序框架\"><a href=\"#完整的程序框架\" class=\"headerlink\" title=\"完整的程序框架\"></a>完整的程序框架</h2><h2 id=\"计数\"><a href=\"#计数\" class=\"headerlink\" title=\"计数\"></a>计数</h2><h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2>","text":"循环与计数本章中进一步增加程序的灵活性，允许我们无需重新编写程序就可以直接改变框架的长度 问题上一节中的输出 存在如下缺陷 每行输出都要与程序的某一部分（以及一个变量）相对应 即使大堆输出格式的一个简单修改，都要求我们重新编写程序 故 构造一个更为灵活的输出形式$\\to$​无需将...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E4%B8%8E%E8%AE%A1%E6%95%B0\"><span class=\"toc-text\">循环与计数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B4%E4%BD%93%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">整体框架</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%95%B0%E7%9B%AE%E6%9C%AA%E7%9F%A5%E7%9A%84%E8%A1%8C\"><span class=\"toc-text\">输出数目未知的行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E4%B8%80%E8%A1%8C\"><span class=\"toc-text\">输出一行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%95%B4%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">完整的程序框架</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E6%95%B0\"><span class=\"toc-text\">计数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li></ol></li></ol>","author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CPP4 组织程序与数据","uid":"bc5e708322b6829557ee8bb706942cbe","slug":"CPP/C4 组织程序和数据","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:14.000Z","comments":true,"path":"api/articles/CPP/C4 组织程序和数据.json","keywords":null,"cover":[],"text":"组织程序和数据库工具特征 能够解决某些特定类型的问题 独立于其他大多数工具 都有一个名称 我们自己编写的程序具备特性中的第一个，不具备另外两个。 对于小程序→不是坏事 更困难的问题→除非将解决方案分割成相互独立的具有名称的各个部分，否则会变得无法控制 C++提供两种基本方法以便让...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CPP4 组织程序和数据 代码纯享","uid":"fb94724ad6a11796aa7671876e21935b","slug":"CPP/C4 组织程序和数据_精简版","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:11.000Z","comments":true,"path":"api/articles/CPP/C4 组织程序和数据_精简版.json","keywords":null,"cover":null,"text":"组织程序和数据C++多文件理解https://zhuanlan.zhihu.com/p/348798266 C++程序一般分三类文件： 头文件( .h )放置各种声明，用于被cpp文件包含 模块文件（.cpp）放置一些函数定义，也称为功能模块 主程序文件（.cpp）包含main(...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}