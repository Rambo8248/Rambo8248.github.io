{"title":"DSA30 Graph","uid":"23870052c199bf06d18a4a93d8161ea8","slug":"DSA/C30 图的表示","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:25:56.000Z","comments":true,"path":"api/articles/DSA/C30 图的表示.json","keywords":null,"cover":[],"content":"<h1 id=\"图的表示：如何存储微博、微信等社交网络中的好友关系？\"><a href=\"#图的表示：如何存储微博、微信等社交网络中的好友关系？\" class=\"headerlink\" title=\"图的表示：如何存储微博、微信等社交网络中的好友关系？\"></a>图的表示：如何存储微博、微信等社交网络中的好友关系？</h1><h2 id=\"如何理解图？\"><a href=\"#如何理解图？\" class=\"headerlink\" title=\"如何理解图？\"></a>如何理解图？</h2><p><img src=\"https://static001.geekbang.org/resource/image/df/af/df85dc345a9726cab0338e68982fd1af.jpg\" alt=\"img\"></p>\n<p><img src=\"https://static001.geekbang.org/resource/image/c3/96/c31759a37d8a8719841f347bd479b796.jpg\" alt=\"img\"></p>\n<p><img src=\"https://static001.geekbang.org/resource/image/55/e8/55d7e4806dc47950ae098d959b03ace8.jpg\" alt=\"img\"></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>名词</th>\n<th>定义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>顶点vertex</td>\n<td>图中的元素</td>\n</tr>\n<tr>\n<td>边edge</td>\n<td>图中顶点与任意其他顶点建立的关系</td>\n</tr>\n<tr>\n<td>度degree</td>\n<td>跟顶点相连接的边的条数</td>\n</tr>\n<tr>\n<td>有向图</td>\n<td>边有方向的图</td>\n</tr>\n<tr>\n<td>无向图</td>\n<td>边无方向的图</td>\n</tr>\n<tr>\n<td>带权图</td>\n<td>每条边都有一个权重</td>\n</tr>\n<tr>\n<td>入度 in-degree</td>\n<td>有多少条边指向这个顶点</td>\n</tr>\n<tr>\n<td>出度 out-degree</td>\n<td>有多少条边以这个顶点为起点指向其他顶点</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"邻接矩阵存储方法\"><a href=\"#邻接矩阵存储方法\" class=\"headerlink\" title=\"邻接矩阵存储方法\"></a>邻接矩阵存储方法</h2><p>Adjacency Matrix</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/62/d2/625e7493b5470e774b5aa91fb4fdb9d2.jpg\" alt=\"img\"></p>\n<ul>\n<li>简单、直观</li>\n<li>浪费存储空间<ul>\n<li>无向图中对称，对于稀疏图Sparse Matrix更加浪费空间</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"邻接表存储方法\"><a href=\"#邻接表存储方法\" class=\"headerlink\" title=\"邻接表存储方法\"></a>邻接表存储方法</h2><p>Adjacency List</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/03/94/039bc254b97bd11670cdc4bf2a8e1394.jpg\" alt=\"img\"></p>\n<h2 id=\"解答开篇\"><a href=\"#解答开篇\" class=\"headerlink\" title=\"解答开篇\"></a>解答开篇</h2><ul>\n<li>微博：有向图</li>\n<li>操作<ul>\n<li>判断用户A是否关注了用户B</li>\n<li>判断用户A是否是用户B的粉丝</li>\n<li>用户A关注用户B</li>\n<li>用户A取消关注用户B</li>\n<li>根据用户名称的首字母排序，分页获取用户的粉丝列表</li>\n<li>根据用户名称的首字母排序，分页获取用户的关注列表</li>\n</ul>\n</li>\n<li>存储方法<ul>\n<li>社交网络为稀疏图，故采用邻接表</li>\n<li>逆邻接表：知道用户的粉丝列表<ul>\n<li><img src=\"https://static001.geekbang.org/resource/image/50/a1/501440bcffdcf4e6f9a5ca1117e990a1.jpg\" alt=\"img\"></li>\n</ul>\n</li>\n<li>改进版本<ul>\n<li>将邻接表中的链表改为支持快速查找的动态数据结构→跳表</li>\n<li>跳表插入、删除、查找都很高效</li>\n<li>数据有序，分页获取变得高效</li>\n</ul>\n</li>\n<li>不同规模数据的解决方案<ul>\n<li>小规模数据→内存中</li>\n<li>大规模数据<ul>\n<li>哈希算法数据分片将邻接表存储在不同机器上<img src=\"https://static001.geekbang.org/resource/image/08/2f/08e4f4330a1d88e9fec94b0f2d1bbe2f.jpg\" alt=\"img\"></li>\n<li>外部存储<img src=\"https://static001.geekbang.org/resource/image/73/8f/7339595c631660dc87559bec2ddf928f.jpg\" alt=\"img\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","text":"图的表示：如何存储微博、微信等社交网络中的好友关系？如何理解图？ 名词 定义 顶点vertex 图中的元素 边edge 图中顶点与任意其他顶点建立的关系 度degree 跟顶点相连接的边的条数 有向图 边有方向的图 无向图 边无方向的图 带权图 每条边都有一个权重 入度 in-d...","link":"","photos":[],"count_time":{"symbolsCount":597,"symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%9A%84%E8%A1%A8%E7%A4%BA%EF%BC%9A%E5%A6%82%E4%BD%95%E5%AD%98%E5%82%A8%E5%BE%AE%E5%8D%9A%E3%80%81%E5%BE%AE%E4%BF%A1%E7%AD%89%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E5%A5%BD%E5%8F%8B%E5%85%B3%E7%B3%BB%EF%BC%9F\"><span class=\"toc-text\">图的表示：如何存储微博、微信等社交网络中的好友关系？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%9B%BE%EF%BC%9F\"><span class=\"toc-text\">如何理解图？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%82%BB%E6%8E%A5%E7%9F%A9%E9%98%B5%E5%AD%98%E5%82%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">邻接矩阵存储方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%82%BB%E6%8E%A5%E8%A1%A8%E5%AD%98%E5%82%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">邻接表存储方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E7%AD%94%E5%BC%80%E7%AF%87\"><span class=\"toc-text\">解答开篇</span></a></li></ol></li></ol>","author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"DSA3 Complexity Analysis1","uid":"503921898d741f6fd2003fcfcab3b5d3","slug":"DSA/C3 复杂度分析(上)","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:18:38.000Z","comments":true,"path":"api/articles/DSA/C3 复杂度分析(上).json","keywords":null,"cover":[],"text":"复杂度分析（上）：如何分析、统计算法的执行效率和资源消耗？为什么需要复杂度分析？事后统计法的局限 测试结果依赖于测试环境 i9 vs i3 测试结果受数据规模影响大 小规模数据排序，出入排序&gt;快速排序 大O复杂度表示法code1 int cal(int n) &#123; ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"DSA32 String Match1","uid":"2786242c5ba6ce0832bbacd81c75d253","slug":"DSA/C32 字符串匹配基础(上)","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:26:22.000Z","comments":true,"path":"api/articles/DSA/C32 字符串匹配基础(上).json","keywords":null,"cover":[],"text":"字符串匹配基础（上）：如何借助哈希算法实现高效字符串匹配？字符串匹配 算法 单模式串匹配的算法：一个串跟一个串进行匹配 BF算法 RK算法 多模式串匹配的算法：在一个串中同时查找多个串 BM算法 KMP算法 BF算法Brute Force，暴力匹配算法，朴素匹配算法 在字符串A中...","link":"","photos":[],"count_time":{"symbolsCount":748,"symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}