{"title":"DSA21 Hash Algorithm1","uid":"df821ff4999b5ea1cca6788fc47b1fb5","slug":"DSA/C21 哈希算法(上)","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:23:32.250Z","comments":true,"path":"api/articles/DSA/C21 哈希算法(上).json","keywords":null,"cover":[],"content":"<h1 id=\"哈希算法（上）：如何防止数据库中的用户信息被脱库？\"><a href=\"#哈希算法（上）：如何防止数据库中的用户信息被脱库？\" class=\"headerlink\" title=\"哈希算法（上）：如何防止数据库中的用户信息被脱库？\"></a>哈希算法（上）：如何防止数据库中的用户信息被脱库？</h1><h2 id=\"引入\"><a href=\"#引入\" class=\"headerlink\" title=\"引入\"></a>引入</h2><ul>\n<li>2011CSDN“脱库”事件</li>\n<li>在实际开发中，如何用哈希算法解决问题</li>\n</ul>\n<h2 id=\"什么是哈希算法？\"><a href=\"#什么是哈希算法？\" class=\"headerlink\" title=\"什么是哈希算法？\"></a>什么是哈希算法？</h2><p>哈希算法：将任意长度的二进制值串映射为固定长度的二进制值串，这个映射的规则就是哈希算法。而通过原始数据映射之后得到的二进制值串就是哈希值。</p>\n<p>优秀哈希算法的要求</p>\n<ul>\n<li>从哈希值不能反向推导出原始数据</li>\n<li>对输入数据非常敏感</li>\n<li>散列冲突的概率要很小</li>\n<li>执行效率要尽量高效，针对较长的文本，也能快速计算出哈希值</li>\n</ul>\n<h3 id=\"以MD5为例\"><a href=\"#以MD5为例\" class=\"headerlink\" title=\"以MD5为例\"></a>以MD5为例</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token function\">MD5</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"今天我来讲哈希算法\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> bb4767201ad42c74e650c1b6c03d78fa\n<span class=\"token function\">MD5</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jiajia\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cd611a31ea969b908932d44d126d195b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token function\">MD5</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我今天讲哈希算法！\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">425f</span>0d5a917188d2c3c3dc85b5e4f2cb\n<span class=\"token function\">MD5</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我今天讲哈希算法\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> a1fb91ac128e6aa37fe42c663971ac3d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"哈希算法的应用\"><a href=\"#哈希算法的应用\" class=\"headerlink\" title=\"哈希算法的应用\"></a>哈希算法的应用</h2><h3 id=\"安全加密\"><a href=\"#安全加密\" class=\"headerlink\" title=\"安全加密\"></a>安全加密</h3><ul>\n<li>MD5 Message-Digest Algorithm</li>\n<li>SHA Secure Hash Algorithm</li>\n<li>DES Data Encryption Standard</li>\n<li>AES Advanced Encryption Standard</li>\n</ul>\n<p>对用于加密的哈希算法来说，有两点格外重要</p>\n<ul>\n<li>很难根据哈希值反向推导出原始数据→防止原始数据被泄露</li>\n<li>散列冲突概率很小<ul>\n<li>理论上没办法做到完全不冲突→鸽巢原理</li>\n<li>哈希算法产生的哈希值的长度固定且有限→能表示的数据有限→我们要哈希的数据是无穷的</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"唯一标识\"><a href=\"#唯一标识\" class=\"headerlink\" title=\"唯一标识\"></a>唯一标识</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gtuay607yaj60f90ai0t402.jpg\" alt=\"image-20210730152846316\"></p>\n<pre class=\"line-numbers language-mermaid\" data-language=\"mermaid\"><code class=\"language-mermaid\">graph TD\n海量图库搜素图片--&gt;不能单纯用图片元信息--&gt;每个图片取一个唯一标识 --&gt;唯一标识和相应图片文件路径信息都存储在散列表中<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"数据校验\"><a href=\"#数据校验\" class=\"headerlink\" title=\"数据校验\"></a>数据校验</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gtuay7v1hgj60e00iujs102.jpg\" alt=\"image-20210730152906343\"></p>\n<pre class=\"line-numbers language-mermaid\" data-language=\"mermaid\"><code class=\"language-mermaid\">graph TD\n100个文件块 --哈希算法--&gt;哈希值--存储--&gt;种子文件 --&gt;文件下载完成 --&gt;对下载好的文件块逐一求哈希值 --&gt;与种子文件保存的哈希值比对 --&gt;相同 --&gt;下载完成\n与种子文件保存的哈希值比对 --&gt;不同 --&gt;重新下载这个文件块<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"散列函数\"><a href=\"#散列函数\" class=\"headerlink\" title=\"散列函数\"></a>散列函数</h3><p>散列函数也是哈希算法的一种应用</p>\n<ul>\n<li><p>相对哈希算法的其他应用，散列函数对于散列算法冲突的要求低很多</p>\n</li>\n<li><p>散列函数对于散列算法计算得到的值，是否能反向解密也并不关心</p>\n</li>\n<li><p>更加关注散列后的值能否平均分布</p>\n</li>\n<li><p>更加追求效率</p>\n</li>\n</ul>\n<h2 id=\"解答开篇\"><a href=\"#解答开篇\" class=\"headerlink\" title=\"解答开篇\"></a>解答开篇</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>字典攻击：黑客拿到加密之后的密文，但可以通过猜来破解</p>\n<ul>\n<li>维护一个常用密码的字典表</li>\n<li>字典中每个密码用哈希算法计算哈希值</li>\n<li>拿哈希值跟脱库后的密文比对</li>\n</ul>\n<p>解决方案：</p>\n<ul>\n<li>引入salt</li>\n<li>跟用户密码组合在一起</li>\n<li>拿组合后的字符串做哈希算法加密，存储到数据库中</li>\n</ul></blockquote>\n","text":"哈希算法（上）：如何防止数据库中的用户信息被脱库？引入 2011CSDN“脱库”事件 在实际开发中，如何用哈希算法解决问题 什么是哈希算法？哈希算法：将任意长度的二进制值串映射为固定长度的二进制值串，这个映射的规则就是哈希算法。而通过原始数据映射之后得到的二进制值串就是哈希值。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%EF%BC%88%E4%B8%8A%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E8%A2%AB%E8%84%B1%E5%BA%93%EF%BC%9F\"><span class=\"toc-text\">哈希算法（上）：如何防止数据库中的用户信息被脱库？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">引入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%EF%BC%9F\"><span class=\"toc-text\">什么是哈希算法？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A5MD5%E4%B8%BA%E4%BE%8B\"><span class=\"toc-text\">以MD5为例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%E7%9A%84%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">哈希算法的应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E5%85%A8%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">安全加密</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86\"><span class=\"toc-text\">唯一标识</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C\"><span class=\"toc-text\">数据校验</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">散列函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E7%AD%94%E5%BC%80%E7%AF%87\"><span class=\"toc-text\">解答开篇</span></a></li></ol></li></ol>","author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"DSA25 Red-Black Tree1","uid":"d603cea4e398050da6c08bad435d355e","slug":"DSA/C25 红黑树(上)","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:24:34.611Z","comments":true,"path":"api/articles/DSA/C25 红黑树(上).json","keywords":null,"cover":[],"text":"红黑树（上）：为什么工程中都用红黑树这种二叉树？引入 二叉查找树各个操作时间复杂度跟树的高度成正比，理想情况下，时间复杂度是$O(logn)$ 不过二叉查找树在频繁的动态更新过程中，可能会出现树的高度远大于$log_2n$的情况，从而导致各个操作的效率下降 为什么工程中都喜欢用红...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"DSA26 Red-Black Tree2","uid":"7693d3ff77636135d449fe9da08ce394","slug":"DSA/C26 红黑树(下)","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:24:48.210Z","comments":true,"path":"api/articles/DSA/C26 红黑树(下).json","keywords":null,"cover":[],"text":"红黑树（下）：掌握这些技巧，你也可以实现一个红黑树 爱：稳定、高效的性能 恨：实现起来比较难 实现红黑树的基本思想大致过程遇到什么样的节点排布，我们就对应怎么去调整 回顾红黑树的要求 节点类型 颜色 根节点 黑色 叶子节点 黑色的空节点，不存储数据 相邻节点 不能同时为红色 每个...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}