{"title":"DSA37 Greedy Algorithm","uid":"a9e32e2621fbdc03b2a42efbcf0ce8e5","slug":"DSA/C37 贪心算法","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:27:30.000Z","comments":true,"path":"api/articles/DSA/C37 贪心算法.json","keywords":null,"cover":[],"content":"<h1 id=\"贪心算法：如何用贪心算法实现Huffman压缩编码？\"><a href=\"#贪心算法：如何用贪心算法实现Huffman压缩编码？\" class=\"headerlink\" title=\"贪心算法：如何用贪心算法实现Huffman压缩编码？\"></a>贪心算法：如何用贪心算法实现Huffman压缩编码？</h1><p>几个基本的算法思想</p>\n<ul>\n<li>贪心算法<ul>\n<li>Huffman Coding</li>\n<li>Prim和Kruskal最小生成树算法</li>\n<li>Dijkstra单源最短路径</li>\n</ul>\n</li>\n<li>分治算法</li>\n<li>回溯算法</li>\n<li>动态规划</li>\n</ul>\n<p>本章如何利用贪心算法实现对数据压缩编码，有效节省数据存储空间</p>\n<h2 id=\"如何理解“贪心算法”\"><a href=\"#如何理解“贪心算法”\" class=\"headerlink\" title=\"如何理解“贪心算法”\"></a>如何理解“贪心算法”</h2><h3 id=\"例子1\"><a href=\"#例子1\" class=\"headerlink\" title=\"例子1\"></a>例子1</h3><p>假设可以容纳100kg物品的背包，为了让背包中所装物品总价值最大，如何选择装哪些豆子？每种装多少？</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/f9/c7/f93f4567168d3bc65688a785b76753c7.jpg\" alt=\"img\"></p>\n<ul>\n<li>单价由高到低</li>\n</ul>\n<h3 id=\"贪心算法的步骤\"><a href=\"#贪心算法的步骤\" class=\"headerlink\" title=\"贪心算法的步骤\"></a>贪心算法的步骤</h3><ul>\n<li>看到这类问题，联想到贪心算法<ul>\n<li>一组数据，定义了限制值和期望值，希望从中选出几个数据，满足限制值情况下，期望值最大</li>\n</ul>\n</li>\n<li>尝试看贪心算法能否解决<ul>\n<li>每次选择当前情况下，在对限制值同等贡献量情况下，对期望值贡献最大的数据</li>\n</ul>\n</li>\n<li>举几个例子看贪心算法产生的结果是否最优</li>\n</ul>\n<h3 id=\"例子2\"><a href=\"#例子2\" class=\"headerlink\" title=\"例子2\"></a>例子2</h3><p><img src=\"https://static001.geekbang.org/resource/image/2d/42/2de91c0afb0912378c5acf32a173f642.jpg\" alt=\"img\"></p>\n<ul>\n<li>贪心算法：S-&gt;A-&gt;E-&gt;T</li>\n<li>实际最优：S-&gt;B-&gt;D-&gt;T</li>\n</ul>\n<p>原因</p>\n<ul>\n<li>前面的选择会影响后面的选择</li>\n</ul>\n<h2 id=\"实战分析\"><a href=\"#实战分析\" class=\"headerlink\" title=\"实战分析\"></a>实战分析</h2><ul>\n<li>分糖果</li>\n<li>钱币找零</li>\n<li>区间覆盖<ul>\n<li>任务调度、教师排课</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://static001.geekbang.org/resource/image/ef/b5/ef2d0bd8284cb6e69294566a45b0e2b5.jpg\" alt=\"img\"></p>\n<h2 id=\"解答开篇\"><a href=\"#解答开篇\" class=\"headerlink\" title=\"解答开篇\"></a>解答开篇</h2><p>霍夫曼编码</p>\n<ul>\n<li>考察文本中有多少个不同字符</li>\n<li>考察每个字符出现的频率</li>\n</ul>\n<p>即：出现频率较高的字符，稍短编码；出现频率较少字符，稍长编码</p>\n<p>为了避免解压缩过程中的歧义，编码要求个字符编码之间，不会出现某个编码是另一个编码前缀的情况</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/83/45/83921e609c8a4dc81ca5b90c8b4cd745.jpg\" alt=\"img\"></p>\n<p>如何根据字符出现频率的不同，给不同的字符进行不同长度的编码呢？</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/7b/7a/7b6a08e7df45eac66820b959c64f877a.jpg\" alt=\"img\"></p>\n<p>后给每一条边上加一个权值，指向左子节点的边标记为0，指向右子节点的边标记为1，</p>\n<p>则从根节点到叶节点的路径就是叶节点对应字符的霍夫曼编码</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/cc/ed/ccf15d048be005924a409574dce143ed.jpg\" alt=\"img\"></p>\n","text":"贪心算法：如何用贪心算法实现Huffman压缩编码？几个基本的算法思想 贪心算法 Huffman Coding Prim和Kruskal最小生成树算法 Dijkstra单源最短路径 分治算法 回溯算法 动态规划 本章如何利用贪心算法实现对数据压缩编码，有效节省数据存储空间 如何理...","link":"","photos":[],"count_time":{"symbolsCount":678,"symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%EF%BC%9A%E5%A6%82%E4%BD%95%E7%94%A8%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0Huffman%E5%8E%8B%E7%BC%A9%E7%BC%96%E7%A0%81%EF%BC%9F\"><span class=\"toc-text\">贪心算法：如何用贪心算法实现Huffman压缩编码？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E2%80%9C%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E2%80%9D\"><span class=\"toc-text\">如何理解“贪心算法”</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%901\"><span class=\"toc-text\">例子1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E7%9A%84%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">贪心算法的步骤</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%902\"><span class=\"toc-text\">例子2</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98%E5%88%86%E6%9E%90\"><span class=\"toc-text\">实战分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E7%AD%94%E5%BC%80%E7%AF%87\"><span class=\"toc-text\">解答开篇</span></a></li></ol></li></ol>","author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"DSA38 分治算法","uid":"28170d54ceec31fbbfec4bc7706417d1","slug":"DSA/C38 分治算法","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:27:48.000Z","comments":true,"path":"api/articles/DSA/C38 分治算法.json","keywords":null,"cover":[],"text":"分治算法：谈一谈大规模计算框架MapReduce中的分治思想引入Google大数据处理三驾马车 MapReduce GFS Bigtable 如何理解分治算法核心：分而治之 将原问题划分成n个规模较小，并且结构与原问题相似的子问题 递归地解决这些子问题 然后合并其结果 分治算法的...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"DSA40 回溯算法","uid":"cab4c9495dd444030efce39574aea74e","slug":"DSA/C39 回溯算法","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:28:02.000Z","comments":true,"path":"api/articles/DSA/C39 回溯算法.json","keywords":null,"cover":[],"text":"回溯算法：从电影《蝴蝶效应》中学习回溯算法的核心思想引入回溯算法的应用 深度优先搜索 经典数学问题 数独 八皇后 0-1背包 图的着色 旅行商问题 全排列 如何理解回溯算法笼统地讲，回溯算法很多时候都应用在“搜索”这类问题上。不过这里说的搜索，并不是狭义的指我们前面讲过的图的搜索...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}