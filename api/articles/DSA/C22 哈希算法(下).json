{"title":"DSA22 Hash Algorithm2","uid":"a8b428ae06db3a75338b25077c7c9ca3","slug":"DSA/C22 哈希算法(下)","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:23:40.177Z","comments":true,"path":"api/articles/DSA/C22 哈希算法(下).json","keywords":null,"cover":[],"content":"<h1 id=\"哈希算法（下）：哈希算法在分布式系统中有哪些应用？\"><a href=\"#哈希算法（下）：哈希算法在分布式系统中有哪些应用？\" class=\"headerlink\" title=\"哈希算法（下）：哈希算法在分布式系统中有哪些应用？\"></a>哈希算法（下）：哈希算法在分布式系统中有哪些应用？</h1><p>哈希算法是如何解决这些分布式问题的</p>\n<h3 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h3><p>负载均衡算法很多，如何才能实现一个会话粘滞的负载均衡算法？即需要在同一个客户端上，在一次会话中的所有请求都路由到同一个服务器上</p>\n<ul>\n<li>直接的办法<ul>\n<li>维护一张映射关系表</li>\n<li>弊端<ul>\n<li>客户端很多，映射表很大，浪费内存</li>\n<li>客户端下线、上线，服务器扩容、缩容都会导致映射失效，维护映射表成本很大</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>哈希算法</li>\n</ul>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gtuazrlnx0j60cp09aglw02.jpg\" alt=\"image-20210730152958732\"></p>\n<pre class=\"line-numbers language-mermaid\" data-language=\"mermaid\"><code class=\"language-mermaid\">graph TD\n客户端IP地址&#x2F;会话ID --哈希算法--&gt;哈希值 --与服务器列表大小进行取模运算--&gt;应该被路由到的服务器编号<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"数据分片\"><a href=\"#数据分片\" class=\"headerlink\" title=\"数据分片\"></a>数据分片</h3><h4 id=\"如何统计“搜索关键词”出现的次数？\"><a href=\"#如何统计“搜索关键词”出现的次数？\" class=\"headerlink\" title=\"如何统计“搜索关键词”出现的次数？\"></a>如何统计“搜索关键词”出现的次数？</h4><p>难点</p>\n<ul>\n<li>搜索日志很大，没办法放到一台机器的内存中</li>\n<li>如果只用一台机器处理，时间会很长</li>\n</ul>\n<p>解决方案</p>\n<ul>\n<li>先对数据分片</li>\n<li>后采用多台机器处理</li>\n</ul>\n<p>具体思路</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gtuazugm9uj60ka0f6gm902.jpg\" alt=\"image-20210730153005754\"></p>\n<pre class=\"line-numbers language-mermaid\" data-language=\"mermaid\"><code class=\"language-mermaid\">graph TD\n搜索记录的日志文件 --读取--&gt;搜索关键词 --哈希函数--&gt;哈希值 --与机器的台数n取模--&gt;应该被分配到的机器编号 --&gt; 哈希值相同的搜索关键词就被分配到了同一个机器上<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"如何快速判断图片是否在图库中？\"><a href=\"#如何快速判断图片是否在图库中？\" class=\"headerlink\" title=\"如何快速判断图片是否在图库中？\"></a>如何快速判断图片是否在图库中？</h4><p>问题</p>\n<ul>\n<li>假设现在图库中有1亿张图片，在单台机器上构建散列表行不通，因为单台机器内存有限</li>\n</ul>\n<p>解决思路</p>\n<ul>\n<li>对数据分片</li>\n<li>采用多机处理</li>\n</ul>\n<p>具体实现</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gtuazx5xipj60mx0ergmv02.jpg\" alt=\"image-20210730153012625\"></p>\n<pre class=\"line-numbers language-mermaid\" data-language=\"mermaid\"><code class=\"language-mermaid\">graph TD\n准备n台机器且每台机器只维护某一部分图片对应的散列表 --&gt;读取图片且计算唯一标识 --与机器个数n求余取模--&gt;要分配的机器编号 --&gt;将图片唯一标识和图片路径发往对应的机器 --&gt;构建散列表  \n图片--哈希算法--&gt; 唯一标识 --与机器个数n求余取模--&gt;得到值为k则去编号k的机器构建的散列表中查找<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"分布式存储\"><a href=\"#分布式存储\" class=\"headerlink\" title=\"分布式存储\"></a>分布式存储</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNly1gtub028ia1j60ku0ca74y02.jpg\" alt=\"image-20210730153018669\"></p>\n<pre class=\"line-numbers language-mermaid\" data-language=\"mermaid\"><code class=\"language-mermaid\">graph TD\n海量数据需要缓存 --哈希算法取哈希值后对机器个数取模--&gt;数据分布在多台机器\n--&gt;数据增多需扩容 --一致性哈希算法--&gt;新机器加入时将某几个小区间数据从原来机器搬移到新机器<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://static001.geekbang.org/resource/image/13/7c/138b060ee522cd2eae83c0c31a16bc7c.jpg\" alt=\"数据扩容时增加机器出现的分配前后不一致\"></p>\n<ul>\n<li>所有数据都要重新计算哈希值</li>\n<li>缓存中的数据一下都失效了</li>\n<li>据请求都会穿透缓存，直接请求数据库</li>\n<li>发生雪崩效应，压垮数据库</li>\n</ul>\n<p><code>一致性哈希算法</code></p>\n<ul>\n<li>假设k个机器，数据的哈希值范围是[0,MAX]</li>\n<li>将整个范围划分为m个小区间，每个机器负责m/k个区间</li>\n<li>当有新机器加入时，就将某几个小区间数据从原来机器中搬移到新的机器中</li>\n</ul>\n","text":"哈希算法（下）：哈希算法在分布式系统中有哪些应用？哈希算法是如何解决这些分布式问题的 负载均衡负载均衡算法很多，如何才能实现一个会话粘滞的负载均衡算法？即需要在同一个客户端上，在一次会话中的所有请求都路由到同一个服务器上 直接的办法 维护一张映射关系表 弊端 客户端很多，映射表很...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%EF%BC%88%E4%B8%8B%EF%BC%89%EF%BC%9A%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%E5%9C%A8%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%9C%89%E5%93%AA%E4%BA%9B%E5%BA%94%E7%94%A8%EF%BC%9F\"><span class=\"toc-text\">哈希算法（下）：哈希算法在分布式系统中有哪些应用？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1\"><span class=\"toc-text\">负载均衡</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%88%86%E7%89%87\"><span class=\"toc-text\">数据分片</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E7%BB%9F%E8%AE%A1%E2%80%9C%E6%90%9C%E7%B4%A2%E5%85%B3%E9%94%AE%E8%AF%8D%E2%80%9D%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0%EF%BC%9F\"><span class=\"toc-text\">如何统计“搜索关键词”出现的次数？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%88%A4%E6%96%AD%E5%9B%BE%E7%89%87%E6%98%AF%E5%90%A6%E5%9C%A8%E5%9B%BE%E5%BA%93%E4%B8%AD%EF%BC%9F\"><span class=\"toc-text\">如何快速判断图片是否在图库中？</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">分布式存储</span></a></li></ol></li></ol></li></ol>","author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"DSA2 如何抓住重点","uid":"5baaeff214933c2b700d2810a6a1c372","slug":"DSA/C2 如何抓住重点","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:18:16.933Z","comments":true,"path":"api/articles/DSA/C2 如何抓住重点.json","keywords":null,"cover":[],"text":"如何抓住重点，系统高效地学习数据结构与算法？什么是数据结构？什么是算法？广义 数据结构：一组数据的存储结构 算法：操作数据的一组方法 狭义 著名的数据结构和算法 数据结构与算法的关系 数据结构为算法服务 算法作用于特定的数据结构 需要的基础 数学基础 编程基础 学习重点 复杂度分...","link":"","photos":[],"count_time":{"symbolsCount":378,"symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"DSA20 Hash Table3","uid":"4b485bd537f5fd1e1b5f6120bc5388d2","slug":"DSA/C20 散列表(下)","date":"2021-07-20T03:46:33.000Z","updated":"2021-08-26T09:23:10.699Z","comments":true,"path":"api/articles/DSA/C20 散列表(下).json","keywords":null,"cover":[],"text":"散列表（下）：为什么散列表和链表经常会一起使用？LRU缓存淘汰算法链表实现回顾![image-20210724173623972](/Users/zhangweijian/Desktop/公众号/数据结构与算法/C20 散列表(下).assets/image-2021072417...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"DSA","slug":"DSA","count":41,"path":"api/categories/DSA.json"}],"tags":[{"name":"DSA","slug":"DSA","count":41,"path":"api/tags/DSA.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}