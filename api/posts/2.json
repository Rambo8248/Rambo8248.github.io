{"total":74,"pageSize":12,"pageCount":7,"data":[{"title":"CPP2 循环与计数","uid":"0a24b61512170bdfb39d64a4b932bf18","slug":"CPP/C2 循环与计数","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:19.523Z","comments":true,"path":"api/articles/CPP/C2 循环与计数.json","cover":[],"text":"循环与计数本章中进一步增加程序的灵活性，允许我们无需重新编写程序就可以直接改变框架的长度 问题上一节中的输出 存在如下缺陷 每行输出都要与程序的某一部分（以及一个变量）相对应 即使大堆输出格式的一个简单修改，都要求我们重新编写程序 故 构造一个更为灵活的输出形式$\\to$​无需将...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP3 使用批量数据","uid":"3555062c5fedfb27efa69ce78e83937d","slug":"CPP/C3 使用批量数据","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:16.985Z","comments":true,"path":"api/articles/CPP/C3 使用批量数据.json","cover":[],"text":"使用批量数据 通常需要在程序中处理多个相似数据段 编写程序读取学生的考试和家庭作业成绩并计算出总成绩 计算学生成绩 学生课程总成绩为加权平均 第一次尝试的程序如下 #include&lt;iomanip> #include&lt;ios> #include&lt;iostream...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP4 组织程序与数据","uid":"bc5e708322b6829557ee8bb706942cbe","slug":"CPP/C4 组织程序和数据","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:14.187Z","comments":true,"path":"api/articles/CPP/C4 组织程序和数据.json","cover":[],"text":"组织程序和数据库工具特征 能够解决某些特定类型的问题 独立于其他大多数工具 都有一个名称 我们自己编写的程序具备特性中的第一个，不具备另外两个。 对于小程序→不是坏事 更困难的问题→除非将解决方案分割成相互独立的具有名称的各个部分，否则会变得无法控制 C++提供两种基本方法以便让...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"C0 开始","uid":"cad1a665aa5f56e359146a1c745e5ca7","slug":"CPP/C0 开始","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:34:31.791Z","comments":true,"path":"api/articles/CPP/C0 开始.json","cover":[],"text":"开始程序源码//Hello world #include&lt;iostream> int main() &#123; std::cout &lt;&lt; \"Hello,World\" &lt;&lt; std::endl; return 0; &#125; 各部分含义 命令 含...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP10 管理内存与低级数据结构","uid":"f33231007a38d63e975cc1fea425a1a6","slug":"CPP/C10 管理内存与低级数据结构","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:48:51.512Z","comments":true,"path":"api/articles/CPP/C10 管理内存与低级数据结构.json","cover":[],"text":"管理内存与低级数据结构由于使用标准库无法解决全部问题，因此非常多的C++程序经常使用“低级”技巧 本章 数组和指针 new和delete表达式动态地对内存进行分配 指针与数组 名词 定义 数组 容器的一种，与向量类似，但没有向量功能那么强大 指针 随机存取的迭代器，可用于存取数组...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP5 使用顺序容器和分析字符串","uid":"8634375c41badd07a389bc135cc9590c","slug":"CPP/C5 使用顺序容器和分析字符串","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:07.730Z","comments":true,"path":"api/articles/CPP/C5 使用顺序容器和分析字符串.json","cover":[],"text":"使用顺序容器和分析字符串本章 更深入了解库的使用方法 标准库 提供有用的数据结构和函数 反映一个具有一致性的体系结构 一旦了解了一种容器的行为特性，就可以非常轻松地掌握全部库容器的使用方法 将学生进行分类要求：算出学生成绩之外，区分学生能否通过课程 实现思路： Student_i...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP7 使用关联容器","uid":"c6bbdc5859805502fec5f66437416592","slug":"CPP/C7 使用关联容器","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:01.416Z","comments":true,"path":"api/articles/CPP/C7 使用关联容器.json","cover":[],"text":"使用关联容器 顺序容器：给容器元素选择适当顺序后，它们会按照我们所选择的顺序将元素保存起来 关联容器：容器会自动将它们的元素安排在一个序列中 支持高效查找的容器关联容器：自动将它们元素安排在一个序列中，利用这种排序方法让我们可以更快速地对特定元素进行定位—并不需要我们自己保持容器...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP4 组织程序和数据 代码纯享","uid":"fb94724ad6a11796aa7671876e21935b","slug":"CPP/C4 组织程序和数据_精简版","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:49:11.031Z","comments":true,"path":"api/articles/CPP/C4 组织程序和数据_精简版.json","cover":null,"text":"组织程序和数据C++多文件理解https://zhuanlan.zhihu.com/p/348798266 C++程序一般分三类文件： 头文件( .h )放置各种声明，用于被cpp文件包含 模块文件（.cpp）放置一些函数定义，也称为功能模块 主程序文件（.cpp）包含main(...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP9 定义新类型","uid":"260ea000f421b3eddad461c7e5d42b80","slug":"CPP/C9 定义新类型","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:48:54.644Z","comments":true,"path":"api/articles/CPP/C9 定义新类型.json","cover":[],"text":"定义新类型可以将C++分成两种 内部类型 -&gt; 被定义成语言核心的一部分 自定义类型(class type) C+设计思想 应该让程序员创建与内部类型一样易于使用的类型 创建具有简明直观的接口的类型 实质性的语言支持 类的设计过程中的体验和判断 Student_info回顾...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP12 使类对象获得数值功能","uid":"32d2985524fbdfade0b6b9e9b6071676","slug":"CPP/C12使类对象获得数值功能","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:48:46.035Z","comments":true,"path":"api/articles/CPP/C12使类对象获得数值功能.json","cover":null,"text":"使类对象获得数值功能 定义了自己的类之后，就可以控制对类进行的扩展，使其对象可以想数值一样工作 Box3 = Box1 + Box2 类的编写者可以设法让各个对象之间彼此保持独立 上一章我们在写Vec类时已经完成大部分工作 本章大部分讨论如何为Str类设计一个友好的接口 一个简单...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CPP8 编写泛型函数","uid":"916993f3303db0d9f66253cbc5cc5316","slug":"CPP/C8 编写泛型函数","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:48:58.328Z","comments":true,"path":"api/articles/CPP/C8 编写泛型函数.json","cover":null,"text":"编写泛型函数本书第一部分：编写程序以便解决某些具体问题 使用c++语言基本要素以及标准库提供的抽象 从这一章开始：学习编写抽象的方法 C8 讨论泛型函数 C9-C12 演示如何实现抽象数据类型 从C13开始：学习面向对象程序设计方法OOP 什么是泛型函数表面上看，我们在编写函数时...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"CPP","slug":"CPP","count":19,"path":"api/categories/CPP.json"}],"tags":[{"name":"CPP","slug":"CPP","count":19,"path":"api/tags/CPP.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Manim1 Installation","uid":"45e3d46203ca5cc5718cda218b7c4f03","slug":"manim/C1 installation","date":"2021-08-26T03:46:33.000Z","updated":"2021-08-26T07:58:07.799Z","comments":true,"path":"api/articles/manim/C1 installation.json","cover":[],"text":"manim安装(MacOS)相关依赖项的安装https://docs.manim.community/en/stable/installation/mac.html To install cairo: brew install cairo To install ffmpeg: b...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Manim","slug":"Manim","count":3,"path":"api/categories/Manim.json"}],"tags":[{"name":"Manim","slug":"Manim","count":3,"path":"api/tags/Manim.json"}],"author":{"name":"Rambo","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Still Water Runs Deep","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}